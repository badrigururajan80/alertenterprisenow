<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_hr_core_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sn_hr_core_task">short_descriptionSTARTSWITHAlertEnterprise:^EQ<item endquery="false" field="short_description" goto="false" newquery="false" operator="STARTSWITH" or="false" value="AlertEnterprise:"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Before Creation AlertEnteprise Activity </name>
        <order>500</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	gs.debug("Before Creation Of Activity:"+current.short_description);
	var aeSetting = new GlideRecordSecure('x_aleen_alertenter_alertenterprise_settings');
	
	var offboardActivityName="";
	aeSetting.query();
	while(aeSetting.next()){
		
		offboardActivityName = aeSetting.offboarding_activity_name;
		if(current.short_description!=offboardActivityName){
			gs.debug("Before Creation Of Activity: Not offboard activity");
			return;
		}
	}
	
	if(current.short_description==offboardActivityName){
		gs.debug("Before Creation Of Activity:  offboard activity");
		var aeUserInfo = new GlideRecordSecure('x_aleen_alertenter_alertenterprise_user_info');
		var userSysId = current.parent.subject_person;
		aeUserInfo.addQuery('subject_person',userSysId);
		aeUserInfo.addQuery('alert_status','Provisioned');
		aeUserInfo.query();
		var found = false;
		while(aeUserInfo.next()){
			gs.debug("Before Creation Of Activity: User Found");
			found = true;
		}
		
		if(!found){
			gs.debug("Before Creation Of Activity: User Not Found");
			current.state=3;
		}
		
	}
	
	
	

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-06-01 04:31:51</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d2315bf2db0dd810a3b6176a489619d2</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Before Creation AlertEnteprise Activity </sys_name>
        <sys_overrides/>
        <sys_package display_value="AlertEnterpriseNow" source="x_aleen_alertenter">d2864ddddbdcef00adac9f5faa96198a</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AlertEnterpriseNow">d2864ddddbdcef00adac9f5faa96198a</sys_scope>
        <sys_update_name>sys_script_d2315bf2db0dd810a3b6176a489619d2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-06-02 18:35:26</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d2315bf2db0dd810a3b6176a489619d2"/>
</record_update>
